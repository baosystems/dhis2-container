name: notify

on:
  push:
    branches:
      - gha_prs  # @TODO: Remove before merging
      - main
    paths:
      - '.env.example'
      - '.github/workflows/notify.yml'
      - 'docker-compose.yml'
      - 'Dockerfile'
  schedule:
    - cron: '3 5 * * *'

defaults:
  run:
    shell: bash

jobs:

  file_dockerfile:
    name: Query versions in Dockerfile
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - name: Query version of gosu
        id: gosu
        run: |
          set -x
          echo "::set-output name=version::$( awk -F'=' '/^ARG GOSU_VERSION/ {print $NF}' Dockerfile )"
      - name: Query version of remco
        id: remco
        run: |
          set -x
          echo "::set-output name=version::$( awk -F'=' '/^ARG REMCO_VERSION/ {print $NF}' Dockerfile )"
      - name: Query version of wait
        id: wait
        run: |
          set -x
          echo "::set-output name=version::$( awk -F'=' '/^ARG WAIT_VERSION/ {print $NF}' Dockerfile )"
    outputs:
      gosu: ${{ steps.gosu.outputs.version }}
      remco: ${{ steps.remco.outputs.version }}
      wait: ${{ steps.wait.outputs.version }}

  file_envexample:
    name: Query versions in .env.example
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout this repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579
      - name: Query version of DHIS2
        id: dhis2
        run: |
          set -x
          echo "::set-output name=version::$( source .env.example && echo "$DHIS2_TAG" )"
      - name: Query version of Tomcat
        id: tomcat
        run: |
          set -x
          echo "::set-output name=version::$( grep --only-matching --extended-regexp 'tomcat[0-9]{1,2}\.[0-9.]+' .env.example | sed 's/^tomcat//' )"
    outputs:
      dhis2: ${{ steps.dhis2.outputs.version }}
      tomcat: ${{ steps.tomcat.outputs.version }}

  github_tags:
    name: Query versions of projects using the GitHub API
    runs-on: ubuntu-20.04
    steps:
      - name: Query latest gosu tag
        id: gosu
        run: |
          set -x
          echo "::set-output name=version::$( curl -fsS https://api.github.com/repos/tianon/gosu/tags | jq --raw-output '.[].name' | sort --version-sort | tail -1 )"
      - name: Query latest remco tag
        id: remco
        run: |
          set -x
          echo "::set-output name=version::$( curl -fsS https://api.github.com/repos/HeavyHorst/remco/tags | jq --raw-output '.[].name' | sed -r 's/^[v.]{1,2}//g' | sort --version-sort | tail -1 )"
      - name: Query latest wait tag
        id: wait
        run: |
          set -x
          echo "::set-output name=version::$( curl -fsS https://api.github.com/repos/ufoscout/docker-compose-wait/tags | jq --raw-output '.[].name' | sort --version-sort | tail -1 )"
    outputs:
      gosu: ${{ steps.gosu.outputs.version }}
      remco: ${{ steps.remco.outputs.version }}
      wait: ${{ steps.wait.outputs.version }}

  image_latest:
    name: Query versions in the latest ghcr.io/baosystems/dhis2 image
    runs-on: ubuntu-20.04
    container: ghcr.io/baosystems/dhis2:latest
    steps:
      - name: Query version of DHIS2
        id: dhis2
        run: |
          set -x
          echo "::set-output name=version::$( awk -F'=' '/^build\.version/ {gsub(/ /, "", $NF); print $NF}' /opt/dhis2/build.properties )"
      - name: Query version of Tomcat
        id: tomcat
        run: |
          set -x
          echo "::set-output name=version::$TOMCAT_VERSION"
    outputs:
      dhis2: ${{ steps.dhis2.outputs.version }}
      tomcat: ${{ steps.tomcat.outputs.version }}

  pr_tomcat:
    name: Increment Tomcat version and create pull request

    needs:
      - file_envexample
      - image_latest

    runs-on: ubuntu-20.04

    steps:

      - name: Checkout this repository
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579

      - name: Update version of Tomcat
        id: tomcat
        run: |
          set -x
          echo '[DEBUG] current=${{ needs.file_envexample.outputs.tomcat }}'
          echo '[DEBUG] next=${{ needs.image_latest.outputs.tomcat }}'
          sed \
            -e 's/${{ needs.file_envexample.outputs.tomcat }}/${{ needs.image_latest.outputs.tomcat }}/g' \
            -i .env.example
          echo '[DEBUG] contents of .env.example:'
          cat .env.example

  notify:
    name: Notify of dependencies that need to be updated

    needs:
      - file_dockerfile
      - file_envexample
      - github_tags
      - image_latest

    runs-on: ubuntu-20.04

    steps:

      - name: Send message to Slack about DHIS2_TAG in .env.example
        if: ${{ needs.file_envexample.outputs.dhis2 != needs.image_latest.outputs.dhis2 }}
        uses: slackapi/slack-github-action@410ae57cff5c6b682b106440be0e6c7eb8c98c9d
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: "{\"level\": \":warning: WARNING\", \"message\": \"DHIS2_TAG in .env.example (${{ needs.file_envexample.outputs.dhis2 }}) does not match version in ghcr.io/baosystems/dhis2:latest (${{ needs.image_latest.outputs.dhis2 }})\"}"

      - name: Send message to Slack about Tomcat version in .env.example
        if: ${{ needs.file_envexample.outputs.tomcat != needs.image_latest.outputs.tomcat }}
        uses: slackapi/slack-github-action@410ae57cff5c6b682b106440be0e6c7eb8c98c9d
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: "{\"level\": \":warning: WARNING\", \"message\": \"Tomcat version in .env.example (${{ needs.file_envexample.outputs.tomcat }}) does not match version in ghcr.io/baosystems/dhis2:latest (${{ needs.image_latest.outputs.tomcat }})\"}"

      - name: Send message to Slack about gosu version in Dockerfile
        if: ${{ needs.file_dockerfile.outputs.gosu != needs.github_tags.outputs.gosu }}
        uses: slackapi/slack-github-action@410ae57cff5c6b682b106440be0e6c7eb8c98c9d
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: "{\"level\": \":warning: WARNING\", \"message\": \"gosu version in Dockerfile (${{ needs.file_dockerfile.outputs.gosu }}) does not match the latest tag in github.com/tianon/gosu (${{ needs.github_tags.outputs.gosu }})\"}"

      - name: Send message to Slack about remco version in Dockerfile
        if: ${{ needs.file_dockerfile.outputs.remco != needs.github_tags.outputs.remco }}
        uses: slackapi/slack-github-action@410ae57cff5c6b682b106440be0e6c7eb8c98c9d
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: "{\"level\": \":warning: WARNING\", \"message\": \"remco version in Dockerfile (${{ needs.file_dockerfile.outputs.remco }}) does not match the latest tag in github.com/HeavyHorst/remco (${{ needs.github_tags.outputs.remco }})\"}"

      - name: Send message to Slack about wait version in Dockerfile
        if: ${{ needs.file_dockerfile.outputs.wait != needs.github_tags.outputs.wait }}
        uses: slackapi/slack-github-action@410ae57cff5c6b682b106440be0e6c7eb8c98c9d
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: "{\"level\": \":warning: WARNING\", \"message\": \"wait version in Dockerfile (${{ needs.file_dockerfile.outputs.wait }}) does not match the latest tag in github.com/ufoscout/docker-compose-wait (${{ needs.github_tags.outputs.wait }})\"}"
